(S'9441cef5aad97c561318f7039e862d3f'
p1
(ihappydoclib.parseinfo.moduleinfo
ModuleInfo
p2
(dp3
S'_namespaces'
p4
((dp5
S'GraphNode'
p6
(ihappydoclib.parseinfo.classinfo
ClassInfo
p7
(dp8
g4
((dp9
(dp10
S'destroy'
p11
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p12
(dp13
g4
((dp14
(dp15
tp16
sS'_exception_info'
p17
(dp18
sS'_parameter_names'
p19
(S'self'
p20
tp21
sS'_parameter_info'
p22
(dp23
g20
(NNNtp24
ssS'_filename'
p25
S'../python/frowns/extensions/vflib/NetworkGraph/GraphObject.py'
p26
sS'_docstring'
p27
S'remove this node from the parent graph'
p28
sS'_name'
p29
g11
sS'_parent'
p30
g7
sS'_comment_info'
p31
(dp32
(S'GraphObject'
tp33
S' base class for all nodes and edges.  Just provides a unique\n handle for each object \n'
p34
ssS'_configuration_values'
p35
(dp36
sS'_class_info'
p37
g14
sS'_function_info'
p38
g15
sS'_comments'
p39
S''
sbsS'findedge'
p40
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p41
(dp42
g4
((dp43
(dp44
tp45
sg17
(dp46
sg19
(S'self'
p47
S'otherNode'
p48
tp49
sg22
(dp50
g47
(NNNtp51
sg48
(NNNtp52
ssg25
g26
sg27
S'(otherNode)->returns the edge between this node and the otherNode)\n        None if there is no edge'
p53
sg29
S'findedge'
p54
sg30
g7
sg31
g32
sg35
(dp55
sg37
g43
sg38
g44
sg39
S''
sbsS'clone'
p56
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p57
(dp58
g4
((dp59
(dp60
tp61
sg17
(dp62
sg19
(S'self'
p63
tp64
sg22
(dp65
g63
(NNNtp66
ssg25
g26
sg27
S''
sg29
g56
sg30
g7
sg31
g32
sg35
(dp67
sg37
g59
sg38
g60
sg39
S''
sbsS'__getattr__'
p68
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p69
(dp70
g4
((dp71
(dp72
tp73
sg17
(dp74
S'AttributeError, key'
p75
Nssg19
(S'self'
p76
S'key'
p77
tp78
sg22
(dp79
g76
(NNNtp80
sg77
(NNNtp81
ssg25
g26
sg27
S''
sg29
g68
sg30
g7
sg31
g32
sg35
(dp82
sg37
g71
sg38
g72
sg39
S''
sbstp83
sg25
g26
sg27
S''
sS'_class_member_info'
p84
(lp85
sg29
g6
sg30
g2
sg31
g32
sS'_base_class_info'
p86
(lp87
S'GraphObject'
p88
asg35
(dp89
sg37
g9
sg38
g10
sg39
S''
sbsS'GraphObject'
p90
(ihappydoclib.parseinfo.classinfo
ClassInfo
p91
(dp92
g4
((dp93
(dp94
S'clone'
p95
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p96
(dp97
g4
((dp98
(dp99
tp100
sg17
(dp101
sg19
(S'self'
p102
tp103
sg22
(dp104
g102
(NNNtp105
ssg25
g26
sg27
S''
sg29
g95
sg30
g91
sg31
g32
sg35
(dp106
sg37
g98
sg38
g99
sg39
S''
sbsS'__repr__'
p107
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p108
(dp109
g4
((dp110
(dp111
tp112
sg17
(dp113
sg19
(S'self'
p114
tp115
sg22
(dp116
g114
(NNNtp117
ssg25
g26
sg27
S''
sg29
g107
sg30
g91
sg31
g32
sg35
(dp118
sg37
g110
sg38
g111
sg39
S''
sbsS'__hash__'
p119
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p120
(dp121
g4
((dp122
(dp123
tp124
sg17
(dp125
sg19
(S'self'
p126
tp127
sg22
(dp128
g126
(NNNtp129
ssg25
g26
sg27
S''
sg29
g119
sg30
g91
sg31
g32
sg35
(dp130
sg37
g122
sg38
g123
sg39
S''
sbsS'__eq__'
p131
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p132
(dp133
g4
((dp134
(dp135
tp136
sg17
(dp137
sg19
(S'self'
p138
S'other'
p139
tp140
sg22
(dp141
g138
(NNNtp142
sg139
(NNNtp143
ssg25
g26
sg27
S'Graph objects are equivalent if the labels\n        are equivalent'
p144
sg29
g131
sg30
g91
sg31
g32
sg35
(dp145
sg37
g134
sg38
g135
sg39
S''
sbsS'set_parent'
p146
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p147
(dp148
g4
((dp149
(dp150
tp151
sg17
(dp152
sg19
(S'self'
p153
S'parent'
p154
tp155
sg22
(dp156
g153
(NNNtp157
sg154
(NNNtp158
ssg25
g26
sg27
S''
sg29
g146
sg30
g91
sg31
g32
sg35
(dp159
sg37
g149
sg38
g150
sg39
S''
sbsS'__init__'
p160
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p161
(dp162
g4
((dp163
(dp164
tp165
sg17
(dp166
sg19
(S'self'
p167
S'label'
p168
S'handlegenerator'
p169
tp170
sg22
(dp171
g167
(NNNtp172
sg169
(I1
S'HandleGenerator()'
Ntp173
sg168
(I1
S'""'
Ntp174
ssg25
g26
sg27
S'() -> graph object base clase'
p175
sg29
g160
sg30
g91
sg31
g32
sg35
(dp176
sg37
g163
sg38
g164
sg39
S''
sbstp177
sg25
g26
sg27
S''
sg84
(lp178
sg29
g90
sg30
g2
sg31
g32
sg86
(lp179
sg35
(dp180
sg37
g93
sg38
g94
sg39
g34
sbsS'GraphEdge'
p181
(ihappydoclib.parseinfo.classinfo
ClassInfo
p182
(dp183
g4
((dp184
(dp185
S'xnode'
p186
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p187
(dp188
g4
((dp189
(dp190
tp191
sg17
(dp192
sg19
(S'self'
p193
S'node'
p194
tp195
sg22
(dp196
g194
(NNNtp197
sg193
(NNNtp198
ssg25
g26
sg27
S'(node)->return the node at the other end of this edge\n        or None if node is not part of this edge'
p199
sg29
g186
sg30
g182
sg31
g32
sg35
(dp200
sg37
g189
sg38
g190
sg39
S''
sbsS'clone'
p201
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p202
(dp203
g4
((dp204
(dp205
tp206
sg17
(dp207
sg19
(S'self'
p208
tp209
sg22
(dp210
g208
(NNNtp211
ssg25
g26
sg27
S''
sg29
g201
sg30
g182
sg31
g32
sg35
(dp212
sg37
g204
sg38
g205
sg39
S''
sbsS'__getattr__'
p213
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p214
(dp215
g4
((dp216
(dp217
tp218
sg17
(dp219
S'AttributeError, key'
p220
Nssg19
(S'self'
p221
S'key'
p222
tp223
sg22
(dp224
g221
(NNNtp225
sg222
(NNNtp226
ssg25
g26
sg27
S''
sg29
g213
sg30
g182
sg31
g32
sg35
(dp227
sg37
g216
sg38
g217
sg39
S''
sbsS'destroy'
p228
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p229
(dp230
g4
((dp231
(dp232
tp233
sg17
(dp234
sg19
(S'self'
p235
tp236
sg22
(dp237
g235
(NNNtp238
ssg25
g26
sg27
S'remove this edge from the parent graph'
p239
sg29
g228
sg30
g182
sg31
g32
sg35
(dp240
sg37
g231
sg38
g232
sg39
S''
sbstp241
sg25
g26
sg27
S''
sg84
(lp242
sg29
g181
sg30
g2
sg31
g32
sg86
(lp243
S'GraphObject'
p244
asg35
(dp245
sg37
g184
sg38
g185
sg39
S''
sbsS'HandleGenerator'
p246
(ihappydoclib.parseinfo.classinfo
ClassInfo
p247
(dp248
g4
((dp249
(dp250
S'__init__'
p251
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p252
(dp253
g4
((dp254
(dp255
tp256
sg17
(dp257
sg19
(S'self'
p258
S'start'
p259
tp260
sg22
(dp261
g259
(I1
S'0'
Ntp262
sg258
(NNNtp263
ssg25
g26
sg27
S''
sg29
g251
sg30
g247
sg31
g32
sg35
(dp264
sg37
g254
sg38
g255
sg39
S''
sbsS'next'
p265
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p266
(dp267
g4
((dp268
(dp269
tp270
sg17
(dp271
sg19
(S'self'
p272
tp273
sg22
(dp274
g272
(NNNtp275
ssg25
g26
sg27
S''
sg29
g265
sg30
g247
sg31
g32
sg35
(dp276
sg37
g268
sg38
g269
sg39
S''
sbstp277
sg25
g26
sg27
S''
sg84
(lp278
sg29
g246
sg30
g2
sg31
g32
sg86
(lp279
sg35
(dp280
sg37
g249
sg38
g250
sg39
S''
sbs(dp281
tp282
sS'_import_info'
p283
(ihappydoclib.parseinfo.imports
ImportInfo
p284
(dp285
S'_named_imports'
p286
(dp287
sS'_straight_imports'
p288
(lp289
sbsg25
g26
sg27
S''
sg29
S'GraphObject'
p290
sg30
Nsg31
g32
sg35
(dp291
S'include_comments'
p292
I1
sS'cacheFilePrefix'
p293
S'.happydoc.'
p294
sS'useCache'
p295
I1
sS'docStringFormat'
p296
S'StructuredText'
p297
ssg37
g5
sg38
g281
sg39
S''
sbt.