(S'51406fe7f36f29042c4a2062e042ee03'
p1
(ihappydoclib.parseinfo.moduleinfo
ModuleInfo
p2
(dp3
S'_namespaces'
p4
((dp5
(dp6
S'compute_equiv_class'
p7
(ihappydoclib.parseinfo.functioninfo
FunctionInfo
p8
(dp9
g4
((dp10
(dp11
tp12
sS'_exception_info'
p13
(dp14
S'ValueError, "Can\'t compute number from atom.number %s atom.charge %s atom.hcount %s" " atom.weight %s" %( atom.number, atom.charge, atom.hcount, atom.weight )'
p15
NssS'_parameter_names'
p16
(S'atom'
p17
tp18
sS'_parameter_info'
p19
(dp20
g17
(NNNtp21
ssS'_filename'
p22
S'../python/frowns/Canonicalization/EquivClass.py'
p23
sS'_docstring'
p24
S'(atom)->Computes a unique integer for an atom'
p25
sS'_name'
p26
g7
sS'_parent'
p27
g2
sS'_comment_info'
p28
(dp29
sS'_configuration_values'
p30
(dp31
sS'_class_info'
p32
g10
sS'_function_info'
p33
g11
sS'_comments'
p34
S''
sbstp35
sS'_import_info'
p36
(ihappydoclib.parseinfo.imports
ImportInfo
p37
(dp38
S'_named_imports'
p39
(dp40
sS'_straight_imports'
p41
(lp42
sbsg22
g23
sg24
S'"""computes equivalence classes for atoms\n\nequiv_class = compute_equiv_class(atom)\n"""'
p43
sg26
S'EquivClass'
p44
sg27
Nsg28
g29
sg30
(dp45
S'include_comments'
p46
I1
sS'cacheFilePrefix'
p47
S'.happydoc.'
p48
sS'useCache'
p49
I1
sS'docStringFormat'
p50
S'StructuredText'
p51
ssg32
g5
sg33
g6
sg34
S''
sbt.